generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  phoneNumber String   @unique
  name        String
  role        String   @default("Inspector")
  email       String?
  department  String?
  location    String?
  employeeId  String?
  supervisor  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  loginTime   DateTime @default(now())

  // User settings stored as JSON
  settings Json?
}

model WorkOrder {
  id          String       @id @default(uuid())
  workOrderId String       @unique // The work_order_id from frontend data
  title       String
  description String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  dueDate     DateTime?
  status      String       @default("pending")
  assignedTo  String
  // Optional physical or logical location for the work order
  location    String?
  priority    String       @default("medium")
  inspections Inspection[]
}

model InspectionTemplate {
  id          String       @id @default(uuid())
  templateId  String       @unique // The template_id from frontend data
  name        String
  description String
  schemaJson  Json
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  
  // Enhanced template management fields
  category    String       @default("General")
  tags        String[]     @default([])
  version     String       @default("1.0.0")
  status      String       @default("draft") // draft, published, archived
  isPublic    Boolean      @default(false)
  createdBy   String?      // User ID who created the template
  lastModifiedBy String?   // User ID who last modified the template
  
  // Template metadata
  estimatedDuration Int?   // Estimated completion time in minutes
  difficulty     String?  // easy, medium, hard
  industry       String?  // Construction, Manufacturing, etc.
  equipmentType  String?  // Forklift, Crane, etc.
  
  // Version control
  parentId       String?  // Reference to parent template for versions
  isLatestVersion Boolean @default(true)
  
  inspections Inspection[]
  
  @@index([category])
  @@index([status])
  @@index([createdBy])
  @@index([parentId])
}

model Inspection {
  id           String    @id @default(uuid())
  inspectionId String    @unique // The inspection_id from frontend data
  workOrderId  String
  templateId   String // References InspectionTemplate.id (UUID)
  status       String    @default("not-started")
  required     Boolean   @default(true)
  // Display order of this inspection within the work order
  order        Int       @default(1)
  completedAt  DateTime?
  resultJson   Json?

  workOrder WorkOrder          @relation(fields: [workOrderId], references: [id])
  template  InspectionTemplate @relation(fields: [templateId], references: [id])
}
